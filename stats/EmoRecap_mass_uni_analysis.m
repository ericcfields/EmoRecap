%Mass univariate analysis for EmoRecap ERP
%
%Author: Eric Fields
%Version Date: 27 May 2019

clearvars; close all;

%% Set-up

%Paths
if isunix()
    main_dir = '/gsfs0/data/kensinel/canlab/EEG_DATA/EmoRecap/DATA';
    addpath('/gsfs0/data/fields/Documents/MATLAB/eeglab14_1_1b_ECF');
else
    main_dir = '\\brain510.bc.edu\LabShareFolder\Bowen, Holly\EmoRecap_ERP\EEGLAB_Analysis\DATA';
end
cd(fullfile(main_dir, 'stats'));

%Make sure all EEGLAB functions are on the MATLAB path
[ALLEEG, EEG, CURRENTSET, ALLCOM] = eeglab;
close all;

%Load GND file
load(fullfile(main_dir, 'stats', 'EmoRecap_128Hz.GND'), '-mat');

%Define some variables
n_perm = 1e5;
time_windows = {[0 400], [200 1000]};
chan_hood = 75;

%Plot raster?
if isunix()
    plot_raster = 'no';
else
    plot_raster = 'no';
end

for t = 1:length(time_windows)
    
    time_wind = time_windows{t};

    %% Valence effects for Remember/Know

    %Main effect of valence
    GND = FclustGND(GND, ...
                    'bins', 66:68, ...  
                    'factor_names', 'Valence', ...  
                    'factor_levels', 3, ...
                    'time_wind', time_wind, ...
                    'chan_hood', chan_hood, ...
                    'n_perm', n_perm, ...
                    'plot_raster', plot_raster, ...
                    'save_GND', 'no', ...
                    'output_file', sprintf('results/EmoRecap_Remember&Know_ValMain_%d-%d.xlsx', time_wind(1), time_wind(2)));

    %% Pairwise follow-ups

    GND = FclustGND(GND, ...
                    'bins', [66, 67], ...  
                    'factor_names', 'Valence', ...  
                    'factor_levels', 2, ...
                    'time_wind', time_wind, ...
                    'chan_hood', chan_hood, ...
                    'n_perm', n_perm, ...
                    'plot_raster', plot_raster, ...
                    'save_GND', 'no', ...
                    'output_file', sprintf('results/EmoRecap_Remember&Know_NEU-POS_%d-%d.xlsx', time_wind(1), time_wind(2)));
    GND = FclustGND(GND, ...
                    'bins', [66, 68], ...  
                    'factor_names', 'Valence', ...  
                    'factor_levels', 2, ...
                    'time_wind', time_wind, ...
                    'chan_hood', chan_hood, ...
                    'n_perm', n_perm, ...
                    'plot_raster', plot_raster, ...
                    'save_GND', 'no', ...
                    'output_file', sprintf('results/EmoRecap_Remember&Know_NEU-NEG_%d-%d.xlsx', time_wind(1), time_wind(2)));
    GND = FclustGND(GND, ...
                    'bins', [67, 68], ...  
                    'factor_names', 'Valence', ...  
                    'factor_levels', 2, ...
                    'time_wind', time_wind, ...
                    'chan_hood', chan_hood, ...
                    'n_perm', n_perm, ...
                    'plot_raster', plot_raster, ...
                    'save_GND', 'no', ...
                    'output_file', sprintf('results/EmoRecap_Remember&Know_NEG-POS_%d-%d.xlsx', time_wind(1), time_wind(2)));


    %% Valence effects for Guess/New

    %Main effect of valence
    GND = FclustGND(GND, ...
                    'bins', 76:78, ...  
                    'factor_names', 'Valence', ...  
                    'factor_levels', 3, ...
                    'time_wind', time_wind, ...
                    'chan_hood', chan_hood, ...
                    'n_perm', n_perm, ...
                    'plot_raster', plot_raster, ...
                    'save_GND', 'no', ...
                    'output_file', sprintf('results/EmoRecap_Guess&New_ValMain_%d-%d.xlsx', time_wind(1), time_wind(2)));

    %Pairwise follow-ups
    GND = FclustGND(GND, ...
                    'bins', [76, 77], ...  
                    'factor_names', 'Valence', ...  
                    'factor_levels', 2, ...
                    'time_wind', time_wind, ...
                    'chan_hood', chan_hood, ...
                    'n_perm', n_perm, ...
                    'plot_raster', plot_raster, ...
                    'save_GND', 'no', ...
                    'output_file', sprintf('results/EmoRecap_Guess&New_NEU-POS_%d-%d.xlsx', time_wind(1), time_wind(2)));
    GND = FclustGND(GND, ...
                    'bins', [76, 78], ...  
                    'factor_names', 'Valence', ...  
                    'factor_levels', 2, ...
                    'time_wind', time_wind, ...
                    'chan_hood', chan_hood, ...
                    'n_perm', n_perm, ...
                    'plot_raster', plot_raster, ...
                    'save_GND', 'no', ...
                    'output_file', sprintf('results/EmoRecap_Guess&New_NEU-NEG_%d-%d.xlsx', time_wind(1), time_wind(2)));
    GND = FclustGND(GND, ...
                    'bins', [77, 78], ...  
                    'factor_names', 'Valence', ...  
                    'factor_levels', 2, ...
                    'time_wind', time_wind, ...
                    'chan_hood', chan_hood, ...
                    'n_perm', n_perm, ...
                    'plot_raster', plot_raster, ...
                    'save_GND', 'no', ...
                    'output_file', sprintf('results/EmoRecap_Guess&New_NEG-POS_%d-%d.xlsx', time_wind(1), time_wind(2)));


    %% Old-New effects

    %Rem/Know Neutral vs Distractors
    GND = FclustGND(GND, ...
                    'bins', [79, 66], ...  
                    'factor_names', 'OldNew', ...  
                    'factor_levels', 2, ...
                    'time_wind', time_wind, ...
                    'chan_hood', chan_hood, ...
                    'n_perm', n_perm, ...
                    'plot_raster', plot_raster, ...
                    'save_GND', 'no', ...
                    'output_file', sprintf('results/EmoRecap_RemKnowNEUvsDistractorGuessNew_%d-%d.xlsx', time_wind(1), time_wind(2)));

    %Rem/Know by valence vs Distractors
    GND = FclustGND(GND, ...
                    'bins', [79, 66:68], ...  
                    'factor_names', 'RetrievalCond', ...
                    'factor_levels', 4, ...
                    'time_wind', time_wind, ...
                    'chan_hood', chan_hood, ...
                    'n_perm', n_perm, ...
                    'plot_raster', plot_raster, ...
                    'save_GND', 'no', ...
                    'output_file', sprintf('results/EmoRecap_Remember&Know_RetrievalVal&DistractorGuessNew_%d-%d.xlsx', time_wind(1), time_wind(2)));


    % Face vs Scene

    GND = FclustGND(GND, ...
                    'bins', [151, 152], ...  
                    'factor_names', 'StimType', ...  
                    'factor_levels', 2, ...
                    'time_wind', time_wind, ...
                    'chan_hood', chan_hood, ...
                    'n_perm', n_perm, ...
                    'plot_raster', plot_raster, ...
                    'save_GND', 'no', ...
                    'output_file', sprintf('results/EmoRecap_FaceVsScence_Remember&Know_%d-%d.xlsx', time_wind(1), time_wind(2)));
                
    GND = FclustGND(GND, ...
                    'bins', [153, 154], ...  
                    'factor_names', 'StimType', ...  
                    'factor_levels', 2, ...
                    'time_wind', time_wind, ...
                    'chan_hood', chan_hood, ...
                    'n_perm', n_perm, ...
                    'plot_raster', plot_raster, ...
                    'save_GND', 'no', ...
                    'output_file', sprintf('results/EmoRecap_FaceVsScence_Guess&New_%d-%d.xlsx', time_wind(1), time_wind(2)));

end


%% Save GND

GND = save_matmk(GND, sprintf('EmoRecap_128Hz_wResults_%s.GND', char(datetime('today', 'Format', 'yyyy-MM-dd'))), fullfile(main_dir, 'stats'), 1);
